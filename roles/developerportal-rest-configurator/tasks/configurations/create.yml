---

- debug:
    msg: Begin tasks configurations/create.yml

- name: Object type
  debug: var=rvar_devportal_rest_configs_category verbosity=1

- name: Object to create
  debug: var=rvar_devportal_rest_configs_kv_list verbosity=1

- name: fail if mandatory params not specified
  fail:
    msg: "A mandatory param was not defined, cannot do anything."
  when: item is not defined
  with_items:
    - "{{ rvar_devportal_rest_configs_category }}"
    
- name: remove from the final Payload object's _configs_kv_list all the undefined keys or the ones with value NULL
  set_fact:
    _configs_kv_list: "{{ (_configs_kv_list | default([])) + [ kv_item ] }}"
  when: kv_item is defined and kv_item.key is defined and (kv_item.key | trim) != "" and kv_item.value is defined and (kv_item.value | trim | lower) != "null"
  loop: "{{ rvar_devportal_rest_configs_kv_list }}"
  loop_control:
    loop_var: kv_item

- name: Set final payload object
  set_fact:
    _configurations_payload: "{{ _configurations_payload_template }}"
  vars:
    _configs_category: "{{ rvar_devportal_rest_configs_category }}"
    _configs_kv_list: "{{ _configs_kv_list | default([],true) }}"

- name: Print final payload object
  debug: var=_configurations_payload verbosity=1

- name: Create object
  uri:
    url: "{{ _devportal_rest_configurations_basepath }}"
    method: POST
    user: "{{ rvar_devportal_rest_auth_username }}"
    password: "{{ rvar_devportal_rest_auth_password }}"
    return_content: yes
    force_basic_auth: yes
    validate_certs: "{{ not ( rvar_devportal_rest_no_check_certs | default() | bool ) }}"
    status_code: [201]
    body_format: json
    body: "{{ _configurations_payload | to_json }}"
    timeout: 30
  no_log: "{{ not ( disable_no_log | default(false,true) ) }}"
  register: rest_response_create

- name: Print response
  debug:
    var: rest_response_create
    verbosity: 2
